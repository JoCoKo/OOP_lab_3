	WavData wav1;
	wav1.CreateFromFile( "chornye-glaza.wav" );
	cout << wav1.GetDescription() << endl;
	wav1.ConvertStereoToMono();
	wav1.ApplyReverb( 0.500, 0.6f );
	wav1.SaveToFile( "black-eyes-mono.wav" );
	
	WavData wav2( "secret-speech.wav" );
	cout << wav2.GetDescription() << endl;
	int sampleRate << wav2.GetSampleRate();
	int chanCount = wav2.GetChanCount();
	bool isStereo = wav2.IsStereo();
		
	wav2.Save(); // Overwrite the original file.



header как указатель
пустой конструктор-выделить память под хедер \ заполнить [calloc + очищение].
деструктор, чистящий память хедера (и clear для векторов даты?) в слуаче не НУЛЛ указателей


+**ревербация выводит информацию для каждого канала коэфт умн-я и норм-ии \ закоментить? отладочный вывод?
+**что делать по логике с отладочными принтф серр саут или заводить логирование и кидать в лог?
***когда надо делать разные исключения и зачем \ про идеологию исключений


сделано
в конструкторе память под имя файла inFile выделить маллок + memcpy длинны +1
outFile удалить
ридхедер при переделке должен давать на выход строку
в риде экспепшн и принт. либо либо 
readheader read16bitdata в pivate + конструктор для вызова обеих сразу или объединить. убрать отыкрытие файла в 16bit
2 функции createfromfile и конструктор с именем на вход конст чар* \ конструктор вызывает креэйт
бул inited. не инит-брос исключ / в конце рид16бит
мэйн как в примере

сделано с ?
в эксепшен имена функций // объединить эксепшен. Имена функций? не особенно понятно.

не сделано 
magic numbers 44 через дефайн константы (8. 30000) | ( - 8) используется всего 2 раза и обозначает размер файла без полей chunkId и chunkSize. | Для избавления от магических чисел, нужно понимать, что тут вообще происходит, а это = разбираться в реализации. Р-р-р




	header = (headerStruct*)calloc(sizeof(headerStruct),1);
	if (header == NULL)
		throw WavGeneralErrors("Not enough memory for calloc header");










-оставшееся по дереву
	мб переделать под вайл рекур каунт лефт
	вывести в перем. общее кол-во
и долгу

Про 4 лабу
хранить ToInt корень + 0.5 для фора
находим делитель-пушбэк
генерировать читаемую строку / int в число sprintf (%d) буфер >=21
